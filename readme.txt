To πρόγραμμα έγινε σε Netbeans 12.0 με Java(TM) SE Runtime Environment 15.0.2 και jdk 15.0.2


Για την εμφάνιση των διαφόρων γραφικών διεπαφών αναθεσα στο primary satge μια scene που κατασκευασα με create content.Αυτή τη σκηνη την χωρισαμε σε πεντε(πάνω κάτω και τρια στο κεντρο) επιμέρους κομμάτια με τη βοηθεια του borderpane όπου και απεικονίσαμε το ταμπλο του καθε παίκτη.Αυτό το αναπαρίσταμε με gridpane σαν 10 vboxes σε κάθε ένα από τα 10 hboxes για καθε παικτη.Για το Μenubar χρησιμοποισαμε  σκετο Vbox και το αναθέσαμε στην δεξιά πλευρά του borderpane.Στο πάνω μέρος δείχνει (δυστυχώς στατικά) μια μεταβλητη ενδεικτικα.Οι διαφορες λεπτομέρειες για χρώματα κελιων και πλοιων ειναι στην κλάση Board.Επίσης τα μηνύματα για τα εναπομείναντα πλοία και την κατασταση τους βγαίνουν στην κονσόλα!

Στην κλάση Ships που τεκμηριώθηκε σύμφωνα με τις προδιαγραφές javadoc  οι μέθοδοι isAlive , hit περιγράφουν  την κατάσταση του πλοιου και εκτελουν ενέργειες σε ένα event(έχει ορισθεί στο Board  για να χρησιμοποιείτε γενικά και να μη χρειάζεται διαφορετική πρόσβαση κάθε φορά!).Η ship  έχει δυο μεταβλητές  που περιγράφουν το εκάστοτε πλοίο σύμφωνα με τον τύπο του και τον προσανατολισμό του.Επίσης έχει το health ώστε να η χρησιμοποιούμε εσωτερικά για καταγραφή καταστασης καθε πλοιου.Όρισα και δυο βοηθητικους πίνακες για το σκορ καθε παιχτη ανάλογα το πλοιο .Ο τύπος κάθε πλοιου  είναι διαφορετικος γιατί με μπερδευουν τα δυο ίδια πλοία(θα έπρεπε ναχρησιμοποιήσω κι άλλλους πίνακες και δηλώσεις στην κλάση) δηλαδή είναι 1,2,3,4,5 με 1 να είναι το μικρότερο(θα μπορούσαμε να τα αναποδυγιρίσουμε με το type1 = (3-type)+3  όπου ο δικος μου τύπος πλοιων και  αυτός που ζητείται!

Στη Board  όπως είπαμε πριν εκτός από τη γραφική διεπαφή με super constructors,vboxes,hboxes,events  ε΄βαλα διάφορους περιορισμούς όπως       η μέθοδος     isValidPoint   που κάνω Overloading με διαφορετικές παραμετρους κάθε φορά για να γίνεται έλεγχος στην εγκυρότητα των κοτιών και ενεργειών του παίχτη κατα το στήσιμο του παιχνιδιου όσο και για το παιχνίδι με τη μέθοδο   boolean shoot() ή οποία αλληλεπιδρά με την hit από ships και ανανεώνουν της πληροφορίες .Επίσης μαζί με την     isValidPoint      η     getNeighbors  μας βοηθά να ελεγξούμε με τη βοηθεία πίνακα  και λίστα και άλλες περιπτω΄σεις εγκυρότηατας των πλοίων και στο παιχνίδι και στο στήσιμο,καθώς απαγορεύται να τοποθετουμε ή να χτυπάμε δίπλα σε κελιά με πλοίο.

Τέλος στη BattleshpMain  βάλαμε την μέθοδοεκτός της οργάνωσης στις σκηνές των επιμέρους τμημάτων βάλαμε την οργάνωση των ενεργειών , να βαράει ο  υπολογιστής μέχρι να αποτύχει ή να φτάσει τις 40 βολές ο παίχτης και να τοποθετήσει τα πλοία του(γιατί δε κατάφερα να διαχειριστώ τα αρχεία που έβαλα στο φάκελο Medialab του project),τα πλοία κάθε παίχτη, και την main ώστε να αρχίσει το πρόγραμμα.

Λειτουργείες που δεν υλοποιήθηκαν :

1)A.I enemy (Πρσπάθησα με το get.neighbour να χρησιμοποιήσω τη λίστα ώστε να ρίχνει σύμφωνα ο αντίπαλος με αυτή αλλά απέτυχα,μόνο να μη χτυπάει σε διπλανά πλοία κατάφερα)

2)Random first move(πρόσπάθησα με τη ranomize να αλλάξω το enemyturn ανάλογα σε true or false ανάλογα στα bord αλλά απέτυχα)

3)Read from file (δε κατάφερα να κάνω load ή επεξεργασία των κειμένων  στο φάκελο Medialab)

4)Το Μενού δε βρήκα πως να το συνδέσω με SYSTEM.exit() και να συνδέσω με hit.

5)τριτο  ταμπλό δημιουργουσε προβλημα στη java  οχι ερρορς και το παράτησα

6)τα μηνύματα για τα εναπομείναντα πλοία και τις καταστασεις τους βγαίνουν στην κονσόλα!


Η παραπάνω αναφορά είναι ενδεικτική παρουσίαση της εργασίας που ζητήθηκε όμως υπάρχουν  διάφορες λειτουργίες που υλοποιήθηκαν σύμγωνα με την εκφώνηση και τον αντικειμενοστραφή προγραμματισμο όπως και κάποιες μικρολειτουργίες που δεν υλοποποιήθηκαν λόγω χρόνου και δυσκολία εύρεσης επεξηγηματικου documentation  πάνω σε παρόμοια θέματα.Για οποιαδήποτε διευκρίνηση μπορείτε να στείλετε στο ιδρυματικό mail!
